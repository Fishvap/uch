
@BaseClass = BaseProperties_rifter_uch_enlisted
[
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	parentAttachmentName(parentAttachment) [ group="Hierarchy" ] : "Parent Model Bone/Attachment Name" : : "The name of the bone or attachment to attach to on the entity's parent in the movement hierarchy. Use !bonemerge to use bone-merge style attachment."

	useLocalOffset(boolean) [ group="Hierarchy" ] : "Use Model Attachment offsets" : 0 : "Whether to respect the specified local offset when doing the initial hierarchical attachment to its parent."
	local.origin(vector) [ group="Hierarchy" ] : "Model Attachment position offset" : : "Offset in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
	local.angles(angle) [ group="Hierarchy" ] : "Model Attachment angular offset" : : "Angular offset in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."
	local.scales(vector) [ group="Hierarchy" ] : "Model Attachment scale" : : "Scale in the local space of the parent model's attachment/bone to use in hierarchy. Not used if you are not using parent attachment."

	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	tags(tags) : "Tags" : "" : "A list of general purpose tags for this entity, for interactions with other entities such as triggers."
]

//
// ChimeraSpawn
//
@PointClass base(BaseProperties_rifter_uch_enlisted) editormodel( "models/player/chimera/chimera.vmdl" ) 
metadata
{
	entity_tool_name = "Chimera Spawnpoint"
	entity_tool_group = "Player"
	entity_tool_tip = "Defines a point where the chimera can spawn"
}
= info_chimera_start : ""
[
]

//
// PigmaskSpawn
//
@PointClass base(BaseProperties_rifter_uch_enlisted) editormodel( "models/player/pigmask/pigmask.vmdl" ) 
metadata
{
	entity_tool_name = "Pigmask Spawnpoint"
	entity_tool_group = "Player"
	entity_tool_tip = "Defines a point where a pigmask can spawn (or spectator)"
}
= info_pigmask_start : ""
[
]

